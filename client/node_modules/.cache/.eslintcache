[{"C:\\garage-etude\\client\\src\\index.js":"1","C:\\garage-etude\\client\\src\\App.js":"2","C:\\garage-etude\\client\\src\\components\\Home\\home.js":"3","C:\\garage-etude\\client\\src\\components\\NavBar\\nav.js":"4","C:\\garage-etude\\client\\src\\components\\Auth\\Auth.js":"5","C:\\garage-etude\\client\\src\\reducers\\index.js":"6","C:\\garage-etude\\client\\src\\Room.js":"7","C:\\garage-etude\\client\\src\\components\\Footer\\Footer.js":"8","C:\\garage-etude\\client\\src\\components\\Auth\\Input.js":"9","C:\\garage-etude\\client\\src\\components\\logged.js":"10","C:\\garage-etude\\client\\src\\components\\NavBar\\styles.js":"11","C:\\garage-etude\\client\\src\\components\\Auth\\AuthStyles.js":"12","C:\\garage-etude\\client\\src\\actions\\auth.js":"13","C:\\garage-etude\\client\\src\\reducers\\auth.js":"14","C:\\garage-etude\\client\\src\\components\\Video\\Video.js":"15","C:\\garage-etude\\client\\src\\components\\options\\Options.js":"16","C:\\garage-etude\\client\\src\\context\\VideoState.js":"17","C:\\garage-etude\\client\\src\\api\\index.js":"18","C:\\garage-etude\\client\\src\\constants\\actionTypes.js":"19","C:\\garage-etude\\client\\src\\context\\VideoContext.js":"20"},{"size":466,"mtime":1632856615073,"results":"21","hashOfConfig":"22"},{"size":771,"mtime":1632864680474,"results":"23","hashOfConfig":"22"},{"size":1864,"mtime":1632864693751,"results":"24","hashOfConfig":"22"},{"size":3145,"mtime":1632854185861,"results":"25","hashOfConfig":"22"},{"size":2943,"mtime":1632854390316,"results":"26","hashOfConfig":"22"},{"size":124,"mtime":1631459975487,"results":"27","hashOfConfig":"22"},{"size":590,"mtime":1632864466564,"results":"28","hashOfConfig":"22"},{"size":501,"mtime":1632856463692,"results":"29","hashOfConfig":"22"},{"size":567,"mtime":1631627301085,"results":"30","hashOfConfig":"22"},{"size":932,"mtime":1631741459406,"results":"31","hashOfConfig":"22"},{"size":1164,"mtime":1631729810076,"results":"32","hashOfConfig":"22"},{"size":603,"mtime":1632058161142,"results":"33","hashOfConfig":"22"},{"size":628,"mtime":1631839755899,"results":"34","hashOfConfig":"22"},{"size":505,"mtime":1631736108811,"results":"35","hashOfConfig":"22"},{"size":7219,"mtime":1632841634202,"results":"36","hashOfConfig":"22"},{"size":6794,"mtime":1632856503412,"results":"37","hashOfConfig":"22"},{"size":7753,"mtime":1632865601930,"results":"38","hashOfConfig":"22"},{"size":316,"mtime":1632866135234,"results":"39","hashOfConfig":"22"},{"size":60,"mtime":1631451919443,"results":"40","hashOfConfig":"22"},{"size":113,"mtime":1630141236000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1iujyv8",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"C:\\garage-etude\\client\\src\\index.js",[],["89","90"],"C:\\garage-etude\\client\\src\\App.js",[],"C:\\garage-etude\\client\\src\\components\\Home\\home.js",["91","92"],"import React,{useState,useEffect} from \"react\";\r\nimport { Link,useLocation,useHistory } from \"react-router-dom\";\r\nimport { Container, Grow, Grid , Button } from '@material-ui/core';\r\nimport DemoCarousel from '../logged.js';\r\n\r\n\r\n\r\nconst intialState={roomid:''};\r\nexport const Home =()=>{\r\n  \r\n\r\n  const [roomID,setRoomID] = useState(intialState);\r\n  const [user,setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const clickHere = () => {\r\n        sessionStorage.setItem('user', user.result.firstname + ' ' + user.result.lastname);\r\n        \r\n        history.push('/room');\r\n        window.location.reload();\r\n};\r\n  useEffect(()=>{\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  },[location]);\r\n  \r\n  \r\n    return(\r\n      <Container maxWidth=\"lg\">\r\n        <Grow in>\r\n          <Container>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item xs={12} sm={7}>\r\n                {user ? (\r\n                  <Grid >\r\n                    <Button  onClick={clickHere}>Click here</Button>\r\n                  </Grid>  \r\n                  ) : (\r\n                  <div >\r\n                  <h3 className=\"\">Welcome to Garage d'Etude!</h3>\r\n                  <h5 className=\"\">Garage d'Etude is a platform in which you can study or teach online!</h5>\r\n                  <br></br>\r\n                  <br></br>\r\n                  <Button component={Link} to=\"/auth\" variant=\"contained\">start your class </Button>\r\n                  </div> \r\n                )\r\n                }             \r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                  <DemoCarousel/>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Grow>\r\n      </Container>\r\n  )\r\n};\r\n","C:\\garage-etude\\client\\src\\components\\NavBar\\nav.js",["93"],"import React,{ useState, useEffect } from \"react\";\r\nimport { Link ,useHistory,useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {AppBar , Toolbar, Typography,Avatar,Button } from '@material-ui/core';\r\nimport useStyles from './styles.js';\r\nimport decode from 'jwt-decode';\r\n\r\nexport const Nav = () => {\r\n  const classes=useStyles();\r\n  \r\n  const [dateTime, setDateTime] = useState(new Date());\r\n  const [user,setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const logout = () => {\r\n    dispatch({type : 'LOGOUT'});\r\n    setUser(null);\r\n    history.push('/home'); \r\n  }\r\n\r\n  useEffect(()=>{\r\n    const token = user?.token;\r\n\r\n    if(token){\r\n      const decodedToken = decode(token);\r\n\r\n      if(decodedToken.exp * 1000 < new Date().getTime()) \r\n        logout();\r\n    }\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  },[location]);\r\n  \r\n    useEffect(() => {\r\n        const id = setInterval(() => setDateTime(new Date()), 1000);\r\n        return () => {\r\n            clearInterval(id);\r\n        }\r\n    }, []);\r\n  return (\r\n    \r\n    <AppBar className={classes.appBar}>\r\n      <div className={classes.brandContainer}>\r\n        <Typography component={Link} to=\"/home\" className={classes.heading} variant=\"h3\" >Garage-d'Etude</Typography>\r\n        <img className={classes.image} src=\"log1.png\" alt=\"icon\" height=\"60\" />\r\n      </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user ? (\r\n            <div className={classes.profile}>\r\n              <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>{user.result.firstname.charAt(0).toUpperCase()}</Avatar>\r\n              <Typography className={classes.userName} variant=\"h6\">{`${user.result.firstname} ${user.result.lastname}`}</Typography>\r\n              <Typography className={classes.time}>            \r\n                {`${dateTime.toLocaleDateString()} ${dateTime.toLocaleTimeString()}`}\r\n              </Typography>\r\n              <Button className={classes.logout} variant=\"contained\" color=\"secondary\" onClick={logout}>Logout</Button>\r\n            </div>\r\n          ) : (\r\n              <Typography className={classes.time}>            \r\n                {`${dateTime.toLocaleDateString()} ${dateTime.toLocaleTimeString()}`}\r\n              </Typography>   \r\n          )\r\n        }             \r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\n\r\n/*\r\nexport class nav extends Component{\r\n  state = {\r\n    curTime: null,\r\n  }\r\n  componentDidMount() {\r\n    setInterval( () => {\r\n      this.setState({\r\n        curTime : new Date().toLocaleString()\r\n      })\r\n    },1000)\r\n  }\r\n  render(){\r\n    \r\n    return(\r\n      \r\n      \r\n      \r\n  )\r\n};\r\n}\r\nexport default nav;\r\n\r\n  /*<div class=\"topnav\">\r\n          <a class=\"active\" href=\"/home\">\r\n            <img src=\"log1.png\" class=\"img\"/>\r\n            Garage d'Etude\r\n          </a>\r\n          <a href=\"#news\" >More</a>\r\n          <a class=\"time\"href=\"#news\" disabled=\"disabled\">{this.state.curTime}</a>\r\n        </div>\r\n        */","C:\\garage-etude\\client\\src\\components\\Auth\\Auth.js",[],"C:\\garage-etude\\client\\src\\reducers\\index.js",[],"C:\\garage-etude\\client\\src\\Room.js",["94","95","96","97","98"],"import { useEffect } from \"react\";\n\nimport Video from \"./components/Video/Video\";\nimport VideoState from \"./context/VideoState\";\nimport { Link,useLocation,useHistory } from \"react-router-dom\";\n\nimport Options from \"./components/options/Options\";\nimport Footer from \"./components/Footer/Footer\";\n\nconst Room = () => {\n  /*const history = useHistory();\n\n  useEffect(()=>{\n    \n  },[history]);*/\n  return (\n    <VideoState>\n      <div className=\"App\" style={{ height: \"100%\", width: \"100%\" }}>\n        <Video />\n        <Options />\n      </div>\n    </VideoState>\n  );\n};\n\nexport default Room;\n","C:\\garage-etude\\client\\src\\components\\Footer\\Footer.js",[],"C:\\garage-etude\\client\\src\\components\\Auth\\Input.js",[],"C:\\garage-etude\\client\\src\\components\\logged.js",[],"C:\\garage-etude\\client\\src\\components\\NavBar\\styles.js",[],"C:\\garage-etude\\client\\src\\components\\Auth\\AuthStyles.js",[],"C:\\garage-etude\\client\\src\\actions\\auth.js",[],"C:\\garage-etude\\client\\src\\reducers\\auth.js",[],"C:\\garage-etude\\client\\src\\components\\Video\\Video.js",["99"],"import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport VideoContext from \"../../context/VideoContext\";\nimport \"./Video.css\";\nimport { Modal, Input, notification, Avatar } from \"antd\";\nimport VideoIcon from \"../../assests/video.svg\";\nimport VideoOff from \"../../assests/video-off.svg\";\nimport Msg_Illus from \"../../assests/msg_illus.svg\";\nimport Msg from \"../../assests/msg.svg\";\nimport ScreenShare from '../../assests/share_screen.svg'\nimport { UserOutlined, MessageOutlined } from \"@ant-design/icons\";\n\nimport { socket } from \"../../context/VideoState\";\n\n// const socket = io()\nconst { Search } = Input;\nconst Video = () => {\n  const {\n    call,\n    callAccepted,\n    myVideo,\n    userVideo,\n    stream,\n    name,\n    callEnded,\n    sendMsg: sendMsgFunc,\n    msgRcv,\n    chat,\n    setChat,\n    userName,\n    myVdoStatus,\n    fullScreen,\n    handleScreenSharing,\n    userVdoStatus,\n    updateVideo,\n    myMicStatus,\n    userMicStatus,\n    updateMic,\n  } = useContext(VideoContext);\n\n  const [sendMsg, setSendMsg] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  socket.on(\"msgRcv\", ({ name, msg: value, sender }) => {\n    let msg = {};\n    msg.msg = value;\n    msg.type = \"rcv\";\n    msg.sender = sender;\n    msg.timestamp = Date.now();\n    setChat([...chat, msg]);\n  });\n\n  const dummy = useRef();\n\n  useEffect(() => {\n    if (dummy?.current) dummy.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [chat]);\n\n  const showModal = (showVal) => {\n    setIsModalVisible(showVal);\n  };\n\n  const onSearch = (value) => {\n    if (value && value.length) sendMsgFunc(value);\n    setSendMsg(\"\");\n  };\n\n  useEffect(() => {\n    if (msgRcv.value && !isModalVisible) {\n      notification.open({\n        message: \"\",\n        description: `${msgRcv.sender}: ${msgRcv.value}`,\n        icon: <MessageOutlined style={{ color: \"#108ee9\" }} />,\n      });\n    }\n  }, [msgRcv]);\n\n  return (\n    <div className=\"grid\">\n      {stream ? (\n        <div\n          style={{ textAlign: \"center\" }}\n          className=\"card\"\n          id={callAccepted && !callEnded ? \"video1\" : \"video3\"}\n        >\n          <div style={{ height: \"2rem\" }}>\n            <h3>{myVdoStatus && name}</h3>\n          </div>\n          <div className=\"video-avatar-container\">\n            <video\n              playsInline\n              muted\n              onClick={fullScreen}\n              ref={myVideo}\n              autoPlay\n              className=\"video-active\"\n              style={{\n                opacity: `${myVdoStatus ? \"1\" : \"0\"}`,\n              }}\n            />\n\n            <Avatar\n              style={{\n                backgroundColor: \"#116\",\n                position: \"absolute\",\n                opacity: `${myVdoStatus ? \"-1\" : \"2\"}`,\n              }}\n              size={98}\n              icon={!name && <UserOutlined />}\n            >\n              {name}\n            </Avatar>\n          </div>\n\n          <div className=\"iconsDiv\">\n            <div\n              className=\"icons\"\n              onClick={() => {\n                updateMic();\n              }}\n              tabIndex=\"0\"\n            >\n              <i\n                className={`fa fa-microphone${myMicStatus ? \"\" : \"-slash\"}`}\n                style={{ transform: \"scaleX(-1)\" }}\n                aria-label={`${myMicStatus ? \"mic on\" : \"mic off\"}`}\n                aria-hidden=\"true\"\n              ></i>\n            </div>\n\n            {callAccepted && !callEnded && (\n              <div\n                className=\"icons\"\n                onClick={() => {\n                  setIsModalVisible(!isModalVisible);\n                }}\n                tabIndex=\"0\"\n              >\n                <img src={Msg} alt=\"chat icon\" />\n              </div>\n            )}\n            <Modal\n              title=\"Chat\"\n              footer={null}\n              visible={isModalVisible}\n              onOk={() => showModal(false)}\n              onCancel={() => showModal(false)}\n              style={{ maxHeight: \"100px\" }}\n            >\n              {chat.length ? (\n                <div className=\"msg_flex\">\n                  {chat.map((msg) => (\n                    <div\n                      className={msg.type === \"sent\" ? \"msg_sent\" : \"msg_rcv\"}\n                    >\n                      {msg.msg}\n                    </div>\n                  ))}\n                  <div ref={dummy} id=\"no_border\"></div>\n                </div>\n              ) : (\n                <div className=\"chat_img_div\">\n                  <img src={Msg_Illus} alt=\"msg_illus\" className=\"img_illus\" />\n                </div>\n              )}\n              <Search\n                placeholder=\"your message\"\n                allowClear\n                className=\"input_msg\"\n                enterButton=\"Send 🚀\"\n                onChange={(e) => setSendMsg(e.target.value)}\n                value={sendMsg}\n                size=\"large\"\n                onSearch={onSearch}\n              />\n            </Modal>\n            {callAccepted && !callEnded && (\n              <div\n                className=\"icons\"\n                onClick={() => handleScreenSharing()} \n                tabIndex=\"0\"\n              >\n                <img src={ScreenShare} alt=\"share screen\" />\n              </div>\n            )}\n\n            <div className=\"icons\" onClick={() => updateVideo()} tabIndex=\"0\">\n              {myVdoStatus ? (\n                <img src={VideoIcon} alt=\"video on icon\" />\n              ) : (\n                <img src={VideoOff} alt=\"video off icon\" />\n              )}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"bouncing-loader\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      )}\n\n      {callAccepted && !callEnded && userVideo && (\n        <div className=\"card2\" style={{ textAlign: \"center\" }} id=\"video2\">\n          <div style={{ height: \"2rem\" }}>\n            <h3>{userVdoStatus && (call.name || userName)}</h3>\n          </div>\n\n          <div className=\"video-avatar-container\">\n            <video\n              playsInline\n              ref={userVideo}             \n              onClick={fullScreen}\n              autoPlay\n              className=\"video-active\"\n              style={{\n                opacity: `${userVdoStatus ? \"1\" : \"0\"}`,\n              }}\n            />\n\n            <Avatar\n              style={{\n                backgroundColor: \"#116\",\n                position: \"absolute\",\n                opacity: `${userVdoStatus ? \"-1\" : \"2\"}`,\n              }}\n              size={98}\n              icon={!(userName || call.name) && <UserOutlined />}\n            >\n              {userName || call.name}\n            </Avatar>\n            {!userMicStatus && (\n              <i\n                style={{\n                  position: \"absolute\",\n                  top: \"0\",\n                  left: \"0\",\n                  padding: \"0.3rem\",\n                  backgroundColor: \"#fefefebf\",\n                }}\n                className=\"fad fa-volume-mute fa-2x\"\n                aria-hidden=\"true\"\n                aria-label=\"microphone muted\"\n              ></i>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","C:\\garage-etude\\client\\src\\components\\options\\Options.js",["100","101","102","103","104","105","106"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { Input, Button, Tooltip, Modal, message } from \"antd\";\nimport Phone from \"../../assests/phone.gif\";\nimport Teams from \"../../assests/teams.mp3\";\nimport * as classes from \"./Options.module.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport VideoContext from \"../../context/VideoContext\";\nimport Hang from \"../../assests/hang.svg\";\nimport {\n  TwitterIcon,\n  TwitterShareButton,\n  WhatsappShareButton,\n  WhatsappIcon,\n  FacebookIcon,\n  FacebookShareButton,\n} from \"react-share\";\nimport {\n  UserOutlined,\n  CopyOutlined,\n  InfoCircleOutlined,\n  PhoneOutlined,\n} from \"@ant-design/icons\";\nimport { socket } from \"../../context/VideoState\";\n\nconst Options = () => {\n  const [idToCall, setIdToCall] = useState(\"\");\n  \n  const [user,setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const Audio = useRef();\n  const {\n    call,\n    callAccepted,\n    myVideo,\n    userVideo,\n    stream,\n    name,\n    setName,\n    callEnded,\n    me,\n    callUser,\n    leaveCall,\n    answerCall,\n    otherUser,\n    setOtherUser,\n    leaveCall1,\n  } = useContext(VideoContext);\n\n  useEffect(() => {\n    if (isModalVisible) {\n      Audio?.current?.play();\n    } else Audio?.current?.pause();\n  }, [isModalVisible]);\n\n  const showModal = (showVal) => {\n    setIsModalVisible(showVal);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    leaveCall1();\n    window.location.reload();\n  };\n  useEffect(() => {\n    if (call.isReceivingCall && !callAccepted) {\n      setIsModalVisible(true);\n      setOtherUser(call.from);\n    } else setIsModalVisible(false);\n  }, [call.isReceivingCall]);\n\n  return (\n    <div className={classes.options}>\n      <div style={{ marginBottom: \"0.5rem\" }}>\n        <h2>Account Info</h2>\n        <Input\n          size=\"large\"\n          placeholder={sessionStorage.getItem('user',user.result.firstname + ' ' + user.result.lastname)}\n          prefix={<UserOutlined />}\n          maxLength={15}\n          suffix={<small>{name.length}/15</small>}\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n            localStorage.setItem(\"name\", e.target.value);\n          }}\n          className={classes.inputgroup}\n        />\n\n        <div className={classes.share_options}>\n          <CopyToClipboard text={me}>\n            <Button\n              type=\"primary\"\n              icon={<CopyOutlined />}\n              className={classes.btn}\n              tabIndex=\"0\"\n              onClick={() => message.success(\"Code copied successfully!\")}\n            >\n              Copy code\n            </Button>\n          </CopyToClipboard>\n\n          <div className={classes.share_social}>\n            <WhatsappShareButton\n              url={`https://github.com/AliNjim9/garage-etude.git`}\n              title={`Join this meeting with the given code \"${me}\"\\n`}\n              separator=\"Link: \"\n              className={classes.share_icon}\n            >\n              <WhatsappIcon size={26} round />\n            </WhatsappShareButton>\n            <FacebookShareButton\n              url={`https://github.com/AliNjim9/garage-etude.git`}\n              title={`Join this meeting with the given code \"${me}\"\\n`}\n              className={classes.share_icon}\n            >\n              <FacebookIcon size={26} round />\n            </FacebookShareButton>\n            <TwitterShareButton\n              url={`https://github.com/AliNjim9/garage-etude.git`}\n              title={`Join this meeting with the given code  \"${me}\"\\n`}\n              className={classes.share_icon}\n            >\n              <TwitterIcon size={26} round className={classes.share_border} />\n            </TwitterShareButton>\n          </div>\n        </div>\n      </div>\n      <div style={{ marginBottom: \"0.5rem\" }}>\n        <h2>Make a call</h2>\n\n        <Input\n          placeholder=\"Enter code to call\"\n          size=\"large\"\n          className={classes.inputgroup}\n          value={idToCall}\n          onChange={(e) => setIdToCall(e.target.value)}\n          style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          suffix={\n            <Tooltip title=\"Enter code of the other user\">\n              <InfoCircleOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />\n            </Tooltip>\n          }\n        />\n\n        {callAccepted && !callEnded ? (\n          <Button\n            variant=\"contained\"\n            onClick={leaveCall}\n            className={classes.hang}\n            tabIndex=\"0\"\n          >\n            <img src={Hang} alt=\"hang up\" style={{ height: \"15px\" }} />\n            &nbsp; Hang up\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            icon={<PhoneOutlined />}\n            onClick={() => {\n              if (name.length) callUser(idToCall);\n              else message.error(\"Please enter your name to call!\");\n            }}\n            className={classes.btn}\n            tabIndex=\"0\"\n          >\n            Call\n          </Button>\n        )}\n      </div>\n\n      {call.isReceivingCall && !callAccepted && (\n        <>\n          <audio src={Teams} loop ref={Audio} />\n          <Modal\n            title=\"Incoming Call\"\n            visible={isModalVisible}\n            onOk={() => showModal(false)}\n            onCancel={handleCancel}\n            footer={null}\n          >\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n              <h1>\n                {call.name} is calling you:{\" \"}\n                <img\n                  src={Phone}\n                  alt=\"phone ringing\"\n                  className={classes.phone}\n                  style={{ display: \"inline-block\" }}\n                />\n              </h1>\n            </div>\n            <div className={classes.btnDiv}>\n              <Button\n                variant=\"contained\"\n                className={classes.answer}\n                color=\"#29bb89\"\n                icon={<PhoneOutlined />}\n                onClick={() => {\n                  answerCall();\n                  Audio.current.pause();\n                }}\n                tabIndex=\"0\"\n              >\n                Answer\n              </Button>\n              <Button\n                variant=\"contained\"\n                className={classes.decline}\n                icon={<PhoneOutlined />}\n                onClick={() => {\n                  setIsModalVisible(false);\n                  Audio.current.pause();\n                }}\n                tabIndex=\"0\"\n              >\n                Decline\n              </Button>\n            </div>\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Options;\n","C:\\garage-etude\\client\\src\\context\\VideoState.js",[],"C:\\garage-etude\\client\\src\\api\\index.js",["107"],"C:\\garage-etude\\client\\src\\constants\\actionTypes.js",[],"C:\\garage-etude\\client\\src\\context\\VideoContext.js",["108"],"import React, { createContext } from \"react\";\nconst VideoContext = createContext();\nexport default VideoContext;\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":12,"column":10,"nodeType":"115","messageId":"116","endLine":12,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":12,"column":17,"nodeType":"115","messageId":"116","endLine":12,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":33,"column":5,"nodeType":"120","endLine":33,"endColumn":15,"suggestions":"121"},{"ruleId":"113","severity":1,"message":"122","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"113","severity":1,"message":"123","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":5,"column":15,"nodeType":"115","messageId":"116","endLine":5,"endColumn":26},{"ruleId":"113","severity":1,"message":"125","line":5,"column":27,"nodeType":"115","messageId":"116","endLine":5,"endColumn":37},{"ruleId":"113","severity":1,"message":"126","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":14},{"ruleId":"118","severity":1,"message":"127","line":74,"column":6,"nodeType":"120","endLine":74,"endColumn":14,"suggestions":"128"},{"ruleId":"113","severity":1,"message":"129","line":23,"column":10,"nodeType":"115","messageId":"116","endLine":23,"endColumn":16},{"ruleId":"113","severity":1,"message":"130","line":28,"column":15,"nodeType":"115","messageId":"116","endLine":28,"endColumn":22},{"ruleId":"113","severity":1,"message":"131","line":34,"column":5,"nodeType":"115","messageId":"116","endLine":34,"endColumn":12},{"ruleId":"113","severity":1,"message":"132","line":35,"column":5,"nodeType":"115","messageId":"116","endLine":35,"endColumn":14},{"ruleId":"113","severity":1,"message":"133","line":36,"column":5,"nodeType":"115","messageId":"116","endLine":36,"endColumn":11},{"ruleId":"113","severity":1,"message":"134","line":44,"column":5,"nodeType":"115","messageId":"116","endLine":44,"endColumn":14},{"ruleId":"118","severity":1,"message":"135","line":69,"column":6,"nodeType":"120","endLine":69,"endColumn":28,"suggestions":"136"},{"ruleId":"113","severity":1,"message":"137","line":2,"column":7,"nodeType":"115","messageId":"116","endLine":2,"endColumn":12},{"ruleId":"113","severity":1,"message":"138","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'roomID' is assigned a value but never used.","Identifier","unusedVar","'setRoomID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["141"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'Footer' is defined but never used.","React Hook useEffect has a missing dependency: 'isModalVisible'. Either include it or remove the dependency array.",["142"],"'socket' is defined but never used.","'setUser' is assigned a value but never used.","'myVideo' is assigned a value but never used.","'userVideo' is assigned a value but never used.","'stream' is assigned a value but never used.","'otherUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'call.from', 'callAccepted', and 'setOtherUser'. Either include them or remove the dependency array.",["143"],"'https' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"150","text":"151"},"Update the dependencies array to be: [isModalVisible, msgRcv]",{"range":"152","text":"153"},"Update the dependencies array to be: [call.from, call.isReceivingCall, callAccepted, setOtherUser]",{"range":"154","text":"155"},[999,1009],"[location, logout, user?.token]",[1903,1911],"[isModalVisible, msgRcv]",[1729,1751],"[call.from, call.isReceivingCall, callAccepted, setOtherUser]"]